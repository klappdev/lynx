/*
 * Licensed under the MIT License <http://opensource.org/licenses/MIT>.
 * SPDX-License-Identifier: MIT
 * Copyright (c) 2022-2023 https://github.com/klappdev
 *
 * Permission is hereby  granted, free of charge, to any  person obtaining a copy
 * of this software and associated  documentation files (the "Software"), to deal
 * in the Software  without restriction, including without  limitation the rights
 * to  use, copy,  modify, merge,  publish, distribute,  sublicense, and/or  sell
 * copies  of  the Software,  and  to  permit persons  to  whom  the Software  is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE  IS PROVIDED "AS  IS", WITHOUT WARRANTY  OF ANY KIND,  EXPRESS OR
 * IMPLIED,  INCLUDING BUT  NOT  LIMITED TO  THE  WARRANTIES OF  MERCHANTABILITY,
 * FITNESS FOR  A PARTICULAR PURPOSE AND  NONINFRINGEMENT. IN NO EVENT  SHALL THE
 * AUTHORS  OR COPYRIGHT  HOLDERS  BE  LIABLE FOR  ANY  CLAIM,  DAMAGES OR  OTHER
 * LIABILITY, WHETHER IN AN ACTION OF  CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE  OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

syntax = "proto3";

package lynx.rpc;

import "google/protobuf/empty.proto";
import "proto/RemoteWord.proto";

message WordIdRequest {
	uint64 id = 1;
}

message ListWordsResponse {
	repeated pb.RemoteWord words = 1;
}

service RemoteDictService {

	rpc InsertWord(pb.RemoteWord) returns (google.protobuf.Empty) {}

	rpc UpdateWord(pb.RemoteWord) returns (google.protobuf.Empty) {}

	rpc DeleteWord(WordIdRequest) returns (google.protobuf.Empty) {}

	rpc GetByIdWord(WordIdRequest) returns (pb.RemoteWord) {}

	rpc GetAllWords(google.protobuf.Empty) returns (ListWordsResponse) {}

	rpc Quit(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}


